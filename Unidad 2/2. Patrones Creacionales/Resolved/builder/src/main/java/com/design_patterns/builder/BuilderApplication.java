package com.design_patterns.builder;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

/**

 Problemas con este enfoque:

 ‚ùó Constructores telesc√≥picos:
  M√∫ltiples sobrecargas de constructor hacen dif√≠cil saber qu√© par√°metro corresponde a qu√©.

 üß† Dificultad de lectura y mantenimiento:
 El orden de los argumentos debe recordarse o consultarse constantemente.

 üß± Falta de extensibilidad:
 Agregar un nuevo par√°metro implicar√≠a cambiar todos los constructores.

 üîß No flexible para construir parcialmente:
 No puedes establecer valores opcionales sin pasar por todos los anteriores.

 *
 */


@SpringBootApplication
public class BuilderApplication {

	public static void main(String[] args) {
		SpringApplication.run(BuilderApplication.class, args);
	}

}
